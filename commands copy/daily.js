const { addBalance, addLog } = require("../utils/wallet");
const { hasClaimedDaily, setClaimedDaily } = require("../utils/dailyReward");
const { getDailyReward } = require("../utils/rewards");

module.exports = {
  name: "daily",
  execute(message) {
    const userId = message.author.id;

    try {
      // Check if the user has already claimed their daily reward today
      if (hasClaimedDaily(userId)) {
        return message.reply(
          "‚ùå ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ!"
        );
      }

      // Get the daily reward amount
      const reward = getDailyReward();

      // Add balance and log the transaction
      addBalance(userId, reward);
      setClaimedDaily(userId);
      addLog(userId, "daily", `Claimed ${reward} coins`);

      // Prepare the reward message
      let rewardMessage = `‚úÖ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô ${reward} ‡∏ö‡∏≤‡∏ó!`;

      // Add special messages for high rewards
      if (reward > 700) {
        rewardMessage += "\nüéâ ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡∏°‡∏≤‡∏Å! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏û‡∏¥‡πÄ‡∏®‡∏©!";
      } else if (reward > 500) {
        rewardMessage += "\nüéà ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏™‡∏π‡∏á!";
      }

      // Optional: Add a random bonus for extra fun
      const randomBonus =
        Math.random() < 0.1 ? Math.floor(Math.random() * 100) + 50 : 0;
      if (randomBonus > 0) {
        addBalance(userId, randomBonus);
        rewardMessage += `\nüéÅ ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏û‡∏¥‡πÄ‡∏®‡∏©! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å ${randomBonus} ‡∏ö‡∏≤‡∏ó!`;
      }

      return message.reply(rewardMessage);
    } catch (error) {
      console.error("‚ùå Error processing daily reward:", error);
      return message.reply(
        "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
      );
    }
  },
};
