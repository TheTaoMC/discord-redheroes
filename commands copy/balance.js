const db = require("../db");
const { getBalance, getKarma } = require("../utils/wallet");

module.exports = {
  name: "balance",
  execute(message, args) {
    // Block checking other users' balance
    if (args.length > 0 && message.mentions.users.size > 0) {
      return message.reply("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");
    }

    try {
      // Fetch balance and karma for the command user
      const userId = message.author.id;
      const balance = getBalance(userId);
      const karma = getKarma(userId);

      // Fetch inventory items from the database
      const inventory = db
        .prepare(
          `
        SELECT i.name, ui.quantity
        FROM user_inventory ui
        JOIN items i ON ui.item_id = i.id
        WHERE ui.user_id = ? and auto_use = 'N'
      `
        )
        .all(userId);

      // Format the inventory list
      const inventoryList =
        inventory.length > 0
          ? inventory
              .map((item) => `‚Ä¢ ${item.name} x${item.quantity}`)
              .join("\n")
          : "üéí ‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤: ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤";

      // Get the user's display name (nickname if available, otherwise username)
      const displayName = message.member.nickname || message.author.username;

      // Prepare the response message with the display name
      const responseMessage = `üë§ ${displayName}\nüí∞ ${balance} ‡∏ö‡∏≤‡∏ó | üß≠ Karma: ${karma}\n\nüì¶ ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤:\n${inventoryList}`;

      // Send the response as a Direct Message (DM)
      message.author
        .send(responseMessage)
        .then(() => {
          // Add a reaction to confirm the DM was sent successfully
          message.react("‚úÖ").catch((error) => {
            console.error("‚ùå Error adding reaction:", error);
          });
        })
        .catch((error) => {
          console.error("‚ùå Error sending DM:", error);
          return message.reply(
            "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≤‡∏á DM ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
          );
        });
    } catch (error) {
      console.error("‚ùå Error fetching balance:", error);
      return message.reply(
        "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
      );
    }
  },
};
