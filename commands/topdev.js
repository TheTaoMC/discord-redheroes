const { EmbedBuilder } = require("discord.js");

module.exports = {
  name: "topdev",
  description: "‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞ Karma ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 3 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å",
  async execute(message, args, { client, db }) {
    // Fetch top 3 users by balance
    db.all(
      "SELECT user_id, username, balance FROM users ORDER BY balance DESC LIMIT 3",
      [],
      async (err, balanceRows) => {
        if (err) {
          console.error("‚ùå Error fetching top balance users:", err.message);
          return message.reply("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!");
        }

        // Get Discord user info for balance rows
        for (const row of balanceRows) {
          try {
            const user = await client.users.fetch(row.user_id);
            row.nickname =
              message.guild.members.cache.get(row.user_id)?.nickname ||
              "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå";
            row.displayName = user.displayName || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á";
            row.globalName = user.globalName || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Å‡∏•";
            row.username = user.username || "‡πÑ‡∏°‡πà‡∏°‡∏µ username";
            row.tag = user.tag || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ó‡πá‡∏Å";
          } catch (error) {
            console.error(`Error fetching user ${row.user_id}:`, error);
            row.displayName = row.username;
          }
        }

        // Fetch top 3 users by karma
        db.all(
          "SELECT user_id, username, karma FROM users ORDER BY karma DESC LIMIT 3",
          [],
          async (err, karmaRows) => {
            if (err) {
              console.error("‚ùå Error fetching top karma users:", err.message);
              return message.reply("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!");
            }

            // Get Discord user info for karma rows
            for (const row of karmaRows) {
              try {
                const user = await client.users.fetch(row.user_id);
                row.nickname =
                  message.guild.members.cache.get(row.user_id)?.nickname ||
                  "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå";
                row.displayName = user.displayName || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á";
                row.globalName = user.globalName || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Å‡∏•";
                row.username = user.username || "‡πÑ‡∏°‡πà‡∏°‡∏µ username";
                row.tag = user.tag || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ó‡πá‡∏Å";
              } catch (error) {
                console.error(`Error fetching user ${row.user_id}:`, error);
                row.displayName = row.username;
              }
            }

            // Build the embed for displaying top users
            const embed = new EmbedBuilder()
              .setTitle("üèÜ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏Ñ‡∏ô‡∏î‡∏µ ‡πÅ‡∏•‡∏∞ ‡∏£‡∏ß‡∏¢‡∏°‡∏≤‡∏Å")
              .setDescription("‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞ Karma ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 3 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å")
              .addFields(
                {
                  name: "üí∞ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î",
                  value:
                    balanceRows.length > 0
                      ? balanceRows
                          .map(
                            (row, index) =>
                              `#${index + 1}\n` +
                              `üë§ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: ${row.nickname}\n` +
                              `üìù ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á: ${row.displayName}\n` +
                              `üåê ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Å‡∏•: ${row.globalName}\n` +
                              `üè∑Ô∏è Username: ${row.username}\n` +
                              `üîñ ‡πÅ‡∏ó‡πá‡∏Å: ${row.tag}\n` +
                              `üíµ ‡πÄ‡∏á‡∏¥‡∏ô: ${row.balance.toLocaleString()} ‡∏ö‡∏≤‡∏ó`
                          )
                          .join("\n\n")
                      : "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
                  inline: false,
                },
                {
                  name: "‚ú® ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏°‡∏µ Karma ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î",
                  value:
                    karmaRows.length > 0
                      ? karmaRows
                          .map(
                            (row, index) =>
                              `#${index + 1}\n` +
                              `üë§ ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: ${row.nickname}\n` +
                              `üìù ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á: ${row.displayName}\n` +
                              `üåê ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Å‡∏•: ${row.globalName}\n` +
                              `üè∑Ô∏è Username: ${row.username}\n` +
                              `üîñ ‡πÅ‡∏ó‡πá‡∏Å: ${row.tag}\n` +
                              `üåü Karma: ${row.karma}`
                          )
                          .join("\n\n")
                      : "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
                  inline: false,
                }
              )
              .setColor("#FFD700")
              .setTimestamp();

            message.channel.send({ embeds: [embed] });
          }
        );
      }
    );
  },
};
