setroom
[เริ่ม]
  ↓
input .setroom #room
  ↓
ถ้าไม่เคย setroom ใช้ได้ทุกห้อง
      ↓
ตรวจสอบ ผู้สั่ง เป็นแอดมิน
  ├── ใช่ → ตรวจสอบ room_id ถ้าซ้ำ
  └── ไม่ → แจ้งว่านี้ไม่ใช่แอดมิน
      ↓
ตรวจสอบ room_id ถ้าซ้ำ
  ├── ใช่ → อัพเดท ชื่อห้อง, idห้อง ลง database 
  └── ไม่ → ตรวจสอบ ห้อง text
      ↓
ตรวจสอบ ห้อง text
  ├── ใช่ → บันทึก ชื่อห้อง, idห้อง ลงdatabase
  └── ไม่ → แจ้งว่านี้ไม่ใช่ ห้องtext
      ↓
[จบ]
***************************************************************************************


listroom
[เริ่ม]
  ↓
input .listroom
  ↓
แสดง ชื่อห้องทั้งหมด
  ↓
Room ID | Room Name 
id1     | name1     
id2     | name2     
[จบ]
***************************************************************************************

delroom
[เริ่ม]
  ↓
input .delroom #room
      ↓
ตรวจสอบ ผู้สั่ง เป็นแอดมิน
  ├── ใช่ → ตรวจสอบ room_id
  └── ไม่ → แจ้งว่านี้ไม่ใช่แอดมิน
      ↓
ตรวจสอบ room_id
  ├── ใช่ → ลบ room นั้นออกจาก database 
  └── ไม่ → แจ้งว่าไม่มีห้องนี้ ในระบบ
[จบ]
***************************************************************************************

work และ answer
[เริ่ม]
  ↓
input .work
      ↓
ตรวจสอบ ว่าคนอื่นเคย .work หรือไม่ work 1 ครั้ง ใข้รวมกันทั้งห้อง ถ้ามีการ work แล้ว คนอื่นจะwork ไม่ได้ แต่ตอบได้ ใครตอบถูกได้รับรางวัลไป
  ├── ไช่ → แจ้งว่ายังมีงานเก่าอยู่ 
    └──ต้อง .answer ก่อน หรือรอ work หมดอายุ ใน 1 นาที
  └── ไม่ → แสดงงาน
      ↓
ตรวจสอบ ว่าเคย work ไปก่อนหน้านี้ เกิน 15 วินาที
  ├── ไช่ → แจ้งว่า work ถี่เกินไป
  └── ไม่ → ตรวจสอบ ว่าคนอื่นเคย .work หรือไม่
      ↓
สุ่มงานที่ได้ 
  ├── 1เกมคำนวนเลย ตัวอย่าง (7*85)+84 = ? สุ่มโจทย์คำนวณ ที่คำตอบเป็น จำเต็มอย่างเดียว
  └── 2เกมท้ายคำศัพท์ EN ตัวอย่าง C.t คำใบ้ แมว - ? มีไฟล์อยู่ใน ../utils/wordList.js  { word: "cat", hint: "c.t", meaning: "แมว" },
      ↓
ตอบคำถามถูก
      ↓
สุ่มเงินรางวัล
      ↓
      1-10 บาท โอกาส 80 %
      11-30 บาท โอกาส 10 %
      31-50 บาท โอกาส 5 %
      51-80 บาท โอกาส 2 % 
      81-100 บาท โอกาส 2 %  คนที่ได้มากกว่า 80 บาท ขึ้น จะมีแจ้งว่าได้รางวัลสูง แล้วมี gif แสดงในข้อความแจ้งด้วย
      101-150 บาท โอกาส 1 % 
      ↓
บันทึก ข้อมูล เงินที่ได้ และ karma+1 ลงใน database user
[จบ]
***************************************************************************************

balance
[เริ่ม]
  ↓
input .balance
  ↓
DM แสดง จำนวนเงิน , karma และ ไอเทมในกระเป๋าที่เป็น  offensive, auto_use = Y และ defensive, auto_use = Y จำนวนไอเทม(quantity)
  ↓
message.react("✅") ที่ input .balance
[จบ]
***************************************************************************************

top
[เริ่ม]
  ↓
input .top
  ↓
แสดง รายชื่อผู้มีเงินเยอะที่สุดตามลำดับ 
  └── 3 ราย
  ↓
แสดง รายชื่อผู้มี karma เยอะที่สุดตามลำดับ 
  └── 3 ราย
  ↓
[จบ]
***************************************************************************************

steal
[เริ่ม]
  ↓
input .steal @user
  ↓
ตรวจ steal ได้วันละ 5 ครั้งต่อวัน
  ├── ครบ → แจ้งเตือนและหยุดการทำงาน
  └── ไม่ครบ → ดำเนินการต่อ
        ↓
ตรวจสอบ item ผู้ steal (offensive, auto_use = Y)
  ├── มี → โหลด Effect จากไฟล์และใช้งาน
      └── หัก item ผู้ steal เสมอ (เช่น stealx2)
          └── หากไม่มีไอเท็มเหลือ → แจ้งเตือน
  └── ไม่มี → ใช้ค่าเริ่มต้น (โอกาสขโมย 50%, เงินขโมยได้ 1-30%)
        ↓
ตรวจสอบ item ผู้ถูก steal (defensive, auto_use = Y)
  ├── มี → โหลด Effect จากไฟล์และใช้งาน
      └── หัก item ผู้ถูก steal ด้วย (เช่น lock)
          └── หากไม่มีไอเท็มเหลือ → แจ้งเตือน
  └── ไม่มี → ดำเนินการต่อ
        ↓
ขโมยสำเร็จ // โอกาสขึ้นอยู่กับไอเท็ม offensive และ defensive
  ├── ใช่ → ขโมยสำเร็จ
    ├── ขโมยได้ไม่เกิน 30% ของผู้ถูกขโมย (ปรับตามไอเท็ม offensive)
    └── สุ่ม 1-30% ด้วย (ปรับตามไอเท็ม offensive)
  └── ไม่ → ขโมยไม่สำเร็จ
        ↓
ขโมยสำเร็จหรือไม่ karma จะ -5
  ↓
[จบ]
***************************************************************************************

shop
[เริ่ม]
  ↓
  input .shop
  ↓
  รายการไอเทม
  no | price | description
[จบ]
***************************************************************************************

buy
[เริ่ม]
  ↓
input .buy no
  ↓
ตรวจสอบหมายเลขไอเท็ม
  ├── มี → ดำเนินการต่อ
  └── ไม่มี → แจ้งเตือนว่า "ไม่มีไอเท็มนี้ในร้านค้า"
        ↓
ตรวจสอบยอดเงินผู้ใช้งาน
  ├── เพียงพอ → ดำเนินการต่อ
  └── ไม่เพียงพอ → แจ้งเตือนว่า "เงินไม่พอ!"
        ↓
ตรวจสอบประเภทไอเท็ม
  ├── Offensive และ auto_use = N → เพิ่มผลตามไอเท็มทันทีที่ซื้อ
  ├── Offensive และ auto_use = Y → เก็บเข้ากระเป๋า
  ├── Defensive และ auto_use = Y → เก็บเข้ากระเป๋า
  └── อื่น ๆ → เก็บเข้ากระเป๋า
        ↓
หักเงินและบันทึกไอเท็มเข้ากระเป๋า
  ↓
[จบ]
***************************************************************************************